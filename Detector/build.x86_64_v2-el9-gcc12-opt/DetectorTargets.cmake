# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.28)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS Detector::DetectorLib)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target Detector::DetectorLib
add_library(Detector::DetectorLib SHARED IMPORTED)

set_target_properties(Detector::DetectorLib PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Core/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/Calo/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/Muon/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/FT/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/Magnet/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/Rich/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/Rich1/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/Rich2/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/VP/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/TV/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/MP/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/UT/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/UP/include/;/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/Detector/LHCb/include/"
  INTERFACE_LINK_LIBRARIES "DD4hep::DDCond;DD4hep::DDCore;fmt::fmt;Rangev3::rangev3;ROOT::Core;ROOT::Gdml;ROOT::Geom;ROOT::Graf;Vc::Vc;yaml-cpp::yaml-cpp;nlohmann_json::nlohmann_json;/cvmfs/lhcb.cern.ch/lib/lcg/releases/tbb/2021.10.0-2a247/x86_64-el9-gcc12-opt/lib64/libtbb.so"
)

# Import target "Detector::DetectorLib" for configuration "Release"
set_property(TARGET Detector::DetectorLib APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Detector::DetectorLib PROPERTIES
  IMPORTED_LOCATION_RELEASE "/disk/moose/general/djdt/lhcbUII_masters/DetectorPlayground/Detector/build.x86_64_v2-el9-gcc12-opt/lib/libDetectorLib.so"
  IMPORTED_SONAME_RELEASE "libDetectorLib.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
